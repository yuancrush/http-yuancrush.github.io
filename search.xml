<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Anaconda+Pytorch（GPU）环境配置</title>
      <link href="/2023/05/01/Anaconda-Pytorch%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
      <url>/2023/05/01/Anaconda-Pytorch%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="安装Anaconda"><a href="#安装Anaconda" class="headerlink" title="安装Anaconda"></a>安装Anaconda</h1><h2 id="卸载Anaconda（可选"><a href="#卸载Anaconda（可选" class="headerlink" title="卸载Anaconda（可选"></a>卸载Anaconda（可选</h2><p>下载 Everything 小工具（一个 2M 左右无需安装的 exe 文件），Everything 可以根据文件名，秒搜计算机中任何位置的任何文件，启动后进入状态需要等待约 20 秒，在 Everything 中搜索“Uninstall-Anaconda”，双击启动<br>卸载Anaconda后，用Everything.exe查找并删除残存在C盘里关于.condarc、jupyter、ipython、continuum、matplotlib、anaconda 以及 conda 的文件</p><h2 id="下载Anaconda"><a href="#下载Anaconda" class="headerlink" title="下载Anaconda"></a>下载Anaconda</h2><p>镜像源<a href="https://mirrors.bfsu.edu.cn/anaconda/archive/">https://mirrors.bfsu.edu.cn/anaconda/archive/</a> 下载的是<strong>2022.10-win</strong>版本，其基础环境（base）下的python为3.9版本</p><p><img src="/../images/Anaconda-Pytorch%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/image-20230909202005860.png" alt="image-20230909202005860"></p><h2 id="安装Annaconda"><a href="#安装Annaconda" class="headerlink" title="安装Annaconda"></a>安装Annaconda</h2><ul><li>Just me 和 All Users，选择 Just me</li><li>修改合适的安装路径，新建【D:\Anaconda】<br><img src="/../images/Anaconda-Pytorch%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/Snipaste_2023-09-01_15-10-52.png" alt="Snipaste_2023-09-01_15-10-52"></li><li>Advanced Options不勾选第一个方框<br><img src="/../images/Anaconda-Pytorch%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/Snipaste_2023-09-01_15-17-13.png" alt="Snipaste_2023-09-01_15-17-13"></li></ul><h2 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h2><ol><li>桌面右击打开显示设置</li><li>左上角“查找设置”中输入“环境变量”，点击“编辑系统环境变量”</li><li>在弹出的“系统属性”窗口中点击“环境变量”，再在弹出的“环境变量”窗口中选中<strong>Path</strong>路径，并点击编辑<br><img src="/../images/Anaconda-Pytorch%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/Snipaste_2023-09-01_15-25-55.png" alt="Snipaste_2023-09-01_15-25-55"></li><li>通过右侧的“新建”按钮，可新建环境变量的路径，将【D:\Anacond】【D:\Anaconda\Scripts】与【D:\Anaconda\Library\bin】添加到环境变量<ul><li>若 Anaconda 安装路径不是 D:\Anaconda，而是 E:\Anaconda，以上三个环境变量对应地进行更改为【E:\Anaconda】、【E:\Anaconda\Scripts】与【E:\Anaconda\Library\bin】</li><li>若此前为其它单独的 Python 解释器添加过环境变量，请在删除它的环境变量，否则 Anaconda 的环境变量会被挤出来（即点击确定后，再点进来会自动消失）<br> <img src="/../images/Anaconda-Pytorch%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/Snipaste_2023-09-02_15-52-13.png" alt="Snipaste_2023-09-02_15-52-13"></li></ul></li></ol><h2 id="添加桌面快捷方式"><a href="#添加桌面快捷方式" class="headerlink" title="添加桌面快捷方式"></a>添加桌面快捷方式</h2><p>桌面底部搜索“jupyter”，打开文件所在位置，把 Jupyter 和 Prompt 快捷方式复制到桌面</p><h1 id="安装Pytorch"><a href="#安装Pytorch" class="headerlink" title="安装Pytorch"></a>安装Pytorch</h1><h2 id="创建虚拟环境"><a href="#创建虚拟环境" class="headerlink" title="创建虚拟环境"></a>创建虚拟环境</h2><p>(1)清屏</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 清屏</span></span><br><span class="line">cls</span><br></pre></td></tr></table></figure><p>(2)base环境下操作    </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 列出所有的环境</span></span><br><span class="line">conda env <span class="built_in">list</span></span><br><span class="line"><span class="comment"># 创建名为“环境名”的虚拟环境，并指定 Python 的版本</span></span><br><span class="line">conda create -n 环境名 python=<span class="number">3.9</span> </span><br><span class="line"><span class="comment"># 创建名为“环境名”的虚拟环境，并指定 Python 的版本与安装路径</span></span><br><span class="line">conda create --prefix=安装路径\环境名 python=<span class="number">3.9</span> </span><br><span class="line"><span class="comment"># 删除名为“环境名”的虚拟环境</span></span><br><span class="line">conda remove -n 环境名 --<span class="built_in">all</span></span><br><span class="line"><span class="comment"># 进入名为“环境名”的虚拟环境</span></span><br><span class="line">conda activate 环境名</span><br></pre></td></tr></table></figure><p>(3)虚拟环境内操作</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 列出当前环境下的所有库</span></span><br><span class="line">conda <span class="built_in">list</span></span><br><span class="line"><span class="comment"># 安装 NumPy 库，并指定版本 1.21.5</span></span><br><span class="line">pip install numpy==<span class="number">1.21</span><span class="number">.5</span> -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line"><span class="comment"># 安装 Pandas 库，并指定版本 1.2.4</span></span><br><span class="line">pip install Pandas==<span class="number">1.2</span><span class="number">.4</span> -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line"><span class="comment"># 安装 Matplotlib 库，并指定版本 3.5.1</span></span><br><span class="line">pip install Matplotlib==<span class="number">3.5</span><span class="number">.1</span> -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line"><span class="comment"># 查看当前环境下某个库的版本（以 numpy 为例）</span></span><br><span class="line">pip show numpy</span><br><span class="line"><span class="comment"># 退出虚拟环境</span></span><br><span class="line">conda deactivate</span><br></pre></td></tr></table></figure><p>创建虚拟环境并进入，安装Numpy Pandas 和Matplotlib 库</p><h2 id="检查GPU"><a href="#检查GPU" class="headerlink" title="检查GPU"></a>检查GPU</h2><p>查看CUDA版本的方法Win+R 后输入 cmd，进入命令提示符，输入 <code>nvcc -V</code><br>为了区分，显卡内的 CUDA 用大写，PyTorch 内置的 cuda 用小写。一般来讲，要满足：<strong>CUDA 版本≥cuda 版本<img src="/../images/Anaconda-Pytorch%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/Snipaste_2023-09-01_16-45-21-16942622109291.png" alt="Snipaste_2023-09-01_16-45-21"></strong></p><p>后面将安装 <strong>torch 1.12.0</strong> 版本，其可选的内置 cuda 版本是 11.3。因此，如果您显卡里的 CUDA 低于了 11.3，需要进行升级</p><h2 id="安装CUDA（可选"><a href="#安装CUDA（可选" class="headerlink" title="安装CUDA（可选"></a>安装CUDA（可选</h2><p>CUDA 的下载链接：<a href="https://developer.nvidia.com/cuda-toolkit-archive">https://developer.nvidia.com/cuda-toolkit-archive</a>以其中的 CUDA 11.3 为例<br><img src="/../images/Anaconda-Pytorch%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/Snipaste_2023-09-02_16-20-06.png" alt="Snipaste_2023-09-02_16-20-06"><br>接下来要选择平台，点击 Windows，之后自动弹出更多内容，按下图选择，最后点击右下角的 Download（2.7GB），建议将其放置新建的 D:\CUDA 中</p><p><img src="/../images/Anaconda-Pytorch%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/Snipaste_2023-09-02_16-21-03.png" alt="Snipaste_2023-09-02_16-21-03"></p><p>下载好之后，将 exe 文件放置在新建的 D:\CUDA 内，点击 exe 文件，大约要等两分钟，会弹出如图 5-5 的提示框，这里要选择临时的解压文件夹，考虑到解压后需要占用大约 7G 的内存，因此建议放在 D:\CUDA\Tem 内，安装结束后，该临时解压文件夹会自动删除<br><img src="/../images/Anaconda-Pytorch%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/Snipaste_2023-09-02_16-22-11.png" alt="Snipaste_2023-09-02_16-22-11"><br>解压好后进入安装页面，同意并继续后点击自定义<br><img src="/../images/Anaconda-Pytorch%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/Snipaste_2023-09-02_16-23-43.png" alt="Snipaste_2023-09-02_16-23-43"><br>接下来，仅仅选择 4 大项中的 CUDA，并取消 CUDA 中关于 VS 的选项<br><img src="/../images/Anaconda-Pytorch%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/Snipaste_2023-09-02_16-24-58.png" alt="Snipaste_2023-09-02_16-24-58"><br>完成后，按照默认的 C 盘路径进行安装（大约 7G）即可<br>配置环境变量(参考Anaconda环境变量配置)，如果是按照默认路径的话，其路径应该是</p><ul><li>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA</li><li>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.3\lib\x64</li><li>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.3\bin</li><li>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.3\libnvvp</li></ul><h2 id="安装Pytorch-1"><a href="#安装Pytorch-1" class="headerlink" title="安装Pytorch"></a>安装Pytorch</h2><p>PyTorch 分为：torch、torchvision 与 torchaudio。这三个库中，torch 有2G 左右，而 torchvision 和 torchaudio 只有 2M 左右，因此一般在代码里只会import torch。当 torch 的版本给定后，另外两个附件的版本也唯一确定了<br>下图给出torch版本可选的cuda版本和支持的python版本，注：NVIDIA 显卡 30 系列（如 NVIDIA GeForce RTX 3050）只能安装 cu110 及其以后的版本<br><img src="/../images/Anaconda-Pytorch%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/Snipaste_2023-09-02_13-09-52.png" alt="Snipaste_2023-09-02_13-09-52"><br>进入 PyTorch 官网<a href="https://pytorch.org/get-started/previous-versions/">https://pytorch.org/get-started/previous-versions/</a>，在其中Ctrl + F 搜索【 pip install torch&#x3D;&#x3D;1.12.0 】<br><img src="/../images/Anaconda-Pytorch%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/Snipaste_2023-09-02_13-54-47.png" alt="Snipaste_2023-09-02_13-54-47"><br>方法一：直接安装<br>复制网页里的那段代码<code>pip install torch==1.12.0+cu113 torchvision==0.13.0+cu113 torchaudio==0.12.0 --extra-index-url https://download.pytorch.org/whl/cu113</code><br>双击 Prompt，进入 DL 环境下运行,看到最后几行代码里有 Successfully installed 就算成功<br><img src="/../images/Anaconda-Pytorch%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/Snipaste_2023-09-02_13-58-08.png" alt="Snipaste_2023-09-02_13-58-08"><br>方法二：轮子法<br>首先，进入方法一提及的网站<a href="https://download.pytorch.org/whl/cu113">https://download.pytorch.org/whl/cu113</a>,进入 torch、torchvision、torchaudio 三大组件各自的网站<br><img src="/../images/Anaconda-Pytorch%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/Snipaste_2023-09-02_15-50-05.png" alt="Snipaste_2023-09-02_15-50-05"><br>在这三个组件各自的网站里 Ctrl + F 搜索 <code>torch==1.12.0+cu113</code>，<code>torchvision==0.13.0+cu113</code>和 <code>torchaudio==0.12.0</code></p><p><img src="/../images/Anaconda-Pytorch%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/Snipaste_2023-09-02_14-02-11.png" alt="Snipaste_2023-09-02_14-02-11"></p><p>下载好后，将三个 whl 文件放在新建的 D:\whl 文件夹中。安装命令为 pip install 路径\轮子名.whl<br><code>pip install D:\whl\torch-1.12.0+cu113-cp39-cp39-win_amd64.whl</code><br><code>pip install D:\whl\torchvision-0.13.0+cu113-cp39-cp39-win_amd64.whl</code><br><code>pip install D:\whl\torchaudio-0.12.0+cu113-cp39-cp39-win_amd64.whl</code><br>在虚拟环境 DL 下执行，安装完毕后，可删除 D:\whl 文件夹</p><h2 id="检验-cuda-是否可用"><a href="#检验-cuda-是否可用" class="headerlink" title="检验 cuda 是否可用"></a>检验 cuda 是否可用</h2><p>方法一：查看当前环境的所有库<br>进入 DL 环境后，使用 conda list 命令列出当前的所有库<br><img src="/../images/Anaconda-Pytorch%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/Snipaste_2023-09-02_15-19-32.png" alt="Snipaste_2023-09-02_15-19-32"><br>方法二：进入 Python 解释器检验<br>进入虚拟环境 DL 后，输入 python 以进入解释器，输入 <code>import torch </code>导入 torch 库,若安装成功，不会返回任何语句，同时在下一行出现“&gt;&gt;&gt;”，提示我们可以继续敲代码<br><img src="/../images/Anaconda-Pytorch%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/Snipaste_2023-09-02_15-21-40.png" alt="Snipaste_2023-09-02_15-21-40"><br>最后一步，输入<code> torch.cuda.is_available()</code>，显示true<br><img src="/../images/Anaconda-Pytorch%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/Snipaste_2023-09-02_15-22-48.png" alt="Snipaste_2023-09-02_15-22-48"></p><h1 id="Jupyter代码编辑器"><a href="#Jupyter代码编辑器" class="headerlink" title="Jupyter代码编辑器"></a>Jupyter代码编辑器</h1><h2 id="修改工作路径"><a href="#修改工作路径" class="headerlink" title="修改工作路径"></a>修改工作路径</h2><p>Jupyter 初始的工作路径为【C:\Users\用户名】，需要进行修正，将其转移到新建的【D:\Jupyter】位置</p><ol><li>新建 D:\Jupyter</li><li>打开桌面快捷方式中的 Prompt</li><li>输入 jupyter notebook –generate-config 命令并执行</li><li>打开上一步生成的配置文件地址，即【C:\Users\用户名.jupyter】</li><li>在 jupyter_notebook_config.py（以记事本方式打开）中使用 Ctrl + F 查找并且修改如下配置项：<br>修改前：<code># c.NotebookApp.notebook_dir = &#39;&#39;</code><br>修改后：<code>c.NotebookApp.notebook_dir = &#39;D:\Jupyter&#39;</code></li><li>找到桌面的 jupyter notebook 快捷图标，鼠标反键&gt;&gt;属性&gt;&gt;快捷方式&gt;&gt;目标，删除最后的”%USERPROFILE%&#x2F;“</li></ol><h2 id="修改默认字体（可选"><a href="#修改默认字体（可选" class="headerlink" title="修改默认字体（可选"></a>修改默认字体（可选</h2><ol><li>打开如下地址<code>D:\Anaconda\Lib\site-packages\notebook\static\components\codemirror\lib</code></li><li>打开 codemirror.css 文件</li><li>Ctrl+F，搜索“font-family: monospace;”的文字，并将其改为 <code>font-family: &#39;Fira Code Light&#39;,&#39;Consolas&#39;</code></li></ol><h2 id="虚拟环境连接jupyter"><a href="#虚拟环境连接jupyter" class="headerlink" title="虚拟环境连接jupyter"></a>虚拟环境连接jupyter</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装 ipykernel</span></span><br><span class="line">pip install ipykernel -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line"><span class="comment"># 将虚拟环境导入 Jupyter 的 kernel 中</span></span><br><span class="line">python -m ipykernel install --user --name=环境名</span><br><span class="line"><span class="comment"># 删除虚拟环境的 kernel 内核</span></span><br><span class="line">jupyter kernelspec remove 环境名</span><br></pre></td></tr></table></figure><p>在 Jupyter 里，切换到 DL 内核后，点击 New，新建一个 DL 内核的脚本<br><img src="/../images/Anaconda-Pytorch%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/Snipaste_2023-09-02_15-42-40.png" alt="Snipaste_2023-09-02_15-42-40"></p><h1 id="Pycharm代码编辑器"><a href="#Pycharm代码编辑器" class="headerlink" title="Pycharm代码编辑器"></a>Pycharm代码编辑器</h1><h2 id="卸载pycharm（可选"><a href="#卸载pycharm（可选" class="headerlink" title="卸载pycharm（可选"></a>卸载pycharm（可选</h2><p>在“PyCharm 安装地址\PyCharm Community Edition 2020.1.3\bin”中，找到Uninstall.exe<br><img src="/../images/Anaconda-Pytorch%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/Snipaste_2023-09-02_15-44-29.png" alt="Snipaste_2023-09-02_15-44-29"><br>双击运行，勾选两个，点击确定<br><img src="/../images/Anaconda-Pytorch%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/Snipaste_2023-09-02_15-46-11.png" alt="Snipaste_2023-09-02_15-46-11"></p><h2 id="安装pycharm"><a href="#安装pycharm" class="headerlink" title="安装pycharm"></a>安装pycharm</h2><p>jetbrains 公司的官网下载 PyCharm，地址为<a href="https://www.jetbrains.com/pycharm/download/other.html">https://www.jetbrains.com/pycharm/download/other.html</a><br>下载社区版（足够个人使用）的 <strong>2020.1.3-win</strong> 版本<br><img src="/../images/Anaconda-Pytorch%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/Snipaste_2023-09-02_15-48-16.png" alt="Snipaste_2023-09-02_15-48-16"><br>安装时，放在 D 盘的新建文件夹：D:\PyCharm 里<br><img src="/../images/Anaconda-Pytorch%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/Snipaste_2023-09-02_15-54-40.png" alt="Snipaste_2023-09-02_15-54-40"></p><h2 id="设置Pycharm"><a href="#设置Pycharm" class="headerlink" title="设置Pycharm"></a>设置Pycharm</h2><p>第一个岔路，选择第二个<br><img src="/../images/Anaconda-Pytorch%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/Snipaste_2023-09-02_16-12-55.png" alt="Snipaste_2023-09-02_16-12-55"><br>第二个岔路，选择主题，黑色或亮色<br>最后一个配置，点左下角的按钮跳过即可</p><h2 id="虚拟环境连接Pycharm"><a href="#虚拟环境连接Pycharm" class="headerlink" title="虚拟环境连接Pycharm"></a>虚拟环境连接Pycharm</h2><p>完成第一次配置后，首先在 D:\PyCharm 中创建文件夹 Py_Projects 存放工程，接着，在 PyCharm 里创建新工程<br>第一步，切换新工程的位置为刚刚创建的文件夹；第二步，点击“Existing interpreter”；第三步，由于是第一次进入 PyCharm，只能点击“…”来找解释器<br><img src="/../images/Anaconda-Pytorch%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/Snipaste_2023-09-02_16-41-36.png" alt="Snipaste_2023-09-02_16-41-36"><br>在弹出的界面中，首先点击左侧的 conda 环境，再将解释器设置为 Anaconda虚拟环境解释器的地址<br><img src="/../images/Anaconda-Pytorch%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/Snipaste_2023-09-02_16-42-07.png" alt="Snipaste_2023-09-02_16-42-07"><br>第一次进入工程页面，连接 Anaconda 需要很长一段时间（15 分钟是有的），点击右下角蓝色小圈圈可查看进度<br><img src="/../images/Anaconda-Pytorch%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/Snipaste_2023-09-02_16-43-02.png" alt="Snipaste_2023-09-02_16-43-02"><br>更新好之后，我们可以把 PyCharm 设置为中文。File——Settings——Plugins——在搜索框输入 Chinese——安装第二个<br><img src="/../images/Anaconda-Pytorch%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/Snipaste_2023-09-02_16-43-57.png" alt="Snipaste_2023-09-02_16-43-57"><br>下载好后，点击 Restart IDE，即重启 PyCharm，重启后，会发现软件已经变成了简体中文，但要第二次更新配置，但这一次更新速度会极快</p>]]></content>
      
      
      <categories>
          
          <category> 环境配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Annaconda </tag>
            
            <tag> Pytorch </tag>
            
            <tag> Pycharm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客部署教程</title>
      <link href="/2023/04/24/%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2%E6%95%99%E7%A8%8B/"/>
      <url>/2023/04/24/%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>hexo new  “博客名” #新建文章</p><p>hexo c #清理残余<br>hexo g #生成<br>hexo s #预览<br>hexo d #部署</p><p>编辑器：typora</p><p>每次直接拷贝到文章的截图将会被自动保存到同名的文件夹下</p><p><img src="/../images/%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2%E6%95%99%E7%A8%8B/image-20240124150941698.png" alt="image-20240124150941698"></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
